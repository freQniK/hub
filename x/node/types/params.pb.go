// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: sentinel/node/v2/params.proto

package types

import (
	fmt "fmt"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"
	_ "google.golang.org/protobuf/types/known/durationpb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Params struct {
	Deposit                   types.Coin                               `protobuf:"bytes,1,opt,name=deposit,proto3" json:"deposit"`
	ExpiryDuration            time.Duration                            `protobuf:"bytes,2,opt,name=expiry_duration,json=expiryDuration,proto3,stdduration" json:"expiry_duration"`
	GigabyteMaxPrices         github_com_cosmos_cosmos_sdk_types.Coins `protobuf:"bytes,3,rep,name=gigabyte_max_prices,json=gigabyteMaxPrices,proto3,castrepeated=github.com/cosmos/cosmos-sdk/types.Coins" json:"gigabyte_max_prices"`
	GigabyteMinPrices         github_com_cosmos_cosmos_sdk_types.Coins `protobuf:"bytes,4,rep,name=gigabyte_min_prices,json=gigabyteMinPrices,proto3,castrepeated=github.com/cosmos/cosmos-sdk/types.Coins" json:"gigabyte_min_prices"`
	HourlyMaxPrices           github_com_cosmos_cosmos_sdk_types.Coins `protobuf:"bytes,5,rep,name=hourly_max_prices,json=hourlyMaxPrices,proto3,castrepeated=github.com/cosmos/cosmos-sdk/types.Coins" json:"hourly_max_prices"`
	HourlyMinPrices           github_com_cosmos_cosmos_sdk_types.Coins `protobuf:"bytes,6,rep,name=hourly_min_prices,json=hourlyMinPrices,proto3,castrepeated=github.com/cosmos/cosmos-sdk/types.Coins" json:"hourly_min_prices"`
	LeaseMaxGigabytes         int64                                    `protobuf:"varint,7,opt,name=lease_max_gigabytes,json=leaseMaxGigabytes,proto3" json:"lease_max_gigabytes,omitempty"`
	LeaseMinGigabytes         int64                                    `protobuf:"varint,8,opt,name=lease_min_gigabytes,json=leaseMinGigabytes,proto3" json:"lease_min_gigabytes,omitempty"`
	LeaseMaxHours             int64                                    `protobuf:"varint,9,opt,name=lease_max_hours,json=leaseMaxHours,proto3" json:"lease_max_hours,omitempty"`
	LeaseMinHours             int64                                    `protobuf:"varint,10,opt,name=lease_min_hours,json=leaseMinHours,proto3" json:"lease_min_hours,omitempty"`
	LeaseDistributionDuration time.Duration                            `protobuf:"bytes,11,opt,name=lease_distribution_duration,json=leaseDistributionDuration,proto3,stdduration" json:"lease_distribution_duration"`
	RevenueShare              github_com_cosmos_cosmos_sdk_types.Dec   `protobuf:"bytes,12,opt,name=revenue_share,json=revenueShare,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Dec" json:"revenue_share"`
}

func (m *Params) Reset()         { *m = Params{} }
func (m *Params) String() string { return proto.CompactTextString(m) }
func (*Params) ProtoMessage()    {}
func (*Params) Descriptor() ([]byte, []int) {
	return fileDescriptor_02f1279255e9f358, []int{0}
}
func (m *Params) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Params) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Params.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Params) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Params.Merge(m, src)
}
func (m *Params) XXX_Size() int {
	return m.Size()
}
func (m *Params) XXX_DiscardUnknown() {
	xxx_messageInfo_Params.DiscardUnknown(m)
}

var xxx_messageInfo_Params proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Params)(nil), "sentinel.node.v2.Params")
}

func init() { proto.RegisterFile("sentinel/node/v2/params.proto", fileDescriptor_02f1279255e9f358) }

var fileDescriptor_02f1279255e9f358 = []byte{
	// 526 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x94, 0x31, 0x73, 0xd3, 0x3c,
	0x18, 0xc7, 0xed, 0x37, 0x7d, 0x93, 0x56, 0x6d, 0x09, 0x49, 0x19, 0xdc, 0x72, 0x28, 0x39, 0x86,
	0x5e, 0x96, 0x48, 0x34, 0x4c, 0xac, 0x21, 0x77, 0x30, 0xd0, 0xa3, 0x97, 0x6e, 0x2c, 0x39, 0xd9,
	0x51, 0x1c, 0x1d, 0x8e, 0xe4, 0xb3, 0xec, 0xe0, 0x1c, 0x5f, 0x82, 0x91, 0x8f, 0xc0, 0xf1, 0x49,
	0x32, 0x76, 0xe4, 0x18, 0x5a, 0x48, 0x06, 0xbe, 0x06, 0x27, 0xc9, 0xaa, 0xcd, 0xc2, 0x75, 0xa0,
	0x93, 0x65, 0x3d, 0xff, 0xe7, 0xff, 0xf3, 0xf3, 0xf8, 0x91, 0xc0, 0x13, 0x49, 0x79, 0xca, 0x38,
	0x8d, 0x30, 0x17, 0x53, 0x8a, 0x97, 0x03, 0x1c, 0x93, 0x84, 0x2c, 0x24, 0x8a, 0x13, 0x91, 0x8a,
	0xf6, 0x43, 0x1b, 0x46, 0x2a, 0x8c, 0x96, 0x83, 0x13, 0x18, 0x08, 0xb9, 0x10, 0x12, 0xfb, 0x44,
	0x52, 0xbc, 0x3c, 0xf3, 0x69, 0x4a, 0xce, 0x70, 0x20, 0x18, 0x37, 0x19, 0x27, 0x8f, 0x42, 0x11,
	0x0a, 0xbd, 0xc4, 0x6a, 0x55, 0xec, 0xc2, 0x50, 0x88, 0x30, 0xa2, 0x58, 0xbf, 0xf9, 0xd9, 0x0c,
	0x4f, 0xb3, 0x84, 0xa4, 0x4c, 0x14, 0x59, 0x4f, 0x7f, 0x35, 0x40, 0xfd, 0x42, 0x83, 0xdb, 0x2f,
	0x40, 0x63, 0x4a, 0x63, 0x21, 0x59, 0xea, 0xb9, 0x5d, 0xb7, 0xb7, 0x3f, 0x38, 0x46, 0x06, 0x89,
	0x14, 0x12, 0x15, 0x48, 0xf4, 0x52, 0x30, 0x3e, 0xdc, 0x59, 0x5f, 0x77, 0x9c, 0xb1, 0xd5, 0xb7,
	0xdf, 0x80, 0x26, 0xcd, 0x63, 0x96, 0xac, 0x26, 0xd6, 0xde, 0xfb, 0xaf, 0xb0, 0x30, 0x7c, 0x64,
	0xf9, 0x68, 0x54, 0x08, 0x86, 0xbb, 0xca, 0xe2, 0xf3, 0x4d, 0xc7, 0x1d, 0x3f, 0x30, 0xb9, 0x36,
	0xd2, 0xfe, 0x08, 0x8e, 0x42, 0x16, 0x12, 0x7f, 0x95, 0xd2, 0xc9, 0x82, 0xe4, 0x93, 0x38, 0x61,
	0x01, 0x95, 0x5e, 0xad, 0x5b, 0xfb, 0xfb, 0x47, 0x3d, 0x53, 0x8e, 0x5f, 0x6f, 0x3a, 0xbd, 0x90,
	0xa5, 0xf3, 0xcc, 0x47, 0x81, 0x58, 0xe0, 0xa2, 0x69, 0xe6, 0xd1, 0x97, 0xd3, 0xf7, 0x38, 0x5d,
	0xc5, 0x54, 0xea, 0x04, 0x39, 0x6e, 0x59, 0xce, 0x39, 0xc9, 0x2f, 0x34, 0xe5, 0x4f, 0x38, 0xe3,
	0x16, 0xbe, 0x73, 0x9f, 0x70, 0xc6, 0x0b, 0xf8, 0x07, 0xd0, 0x9a, 0x8b, 0x2c, 0x89, 0x56, 0xd5,
	0xba, 0xff, 0xff, 0xf7, 0xe8, 0xa6, 0xa1, 0x94, 0x55, 0x57, 0xc0, 0x65, 0xcd, 0xf5, 0xfb, 0x03,
	0xdf, 0x56, 0x8c, 0xc0, 0x51, 0x44, 0x89, 0x34, 0x3f, 0xda, 0x36, 0x44, 0x7a, 0x8d, 0xae, 0xdb,
	0xab, 0x8d, 0x5b, 0x3a, 0x74, 0x4e, 0xf2, 0x57, 0x36, 0x50, 0xd1, 0x33, 0x5e, 0xd1, 0xef, 0x56,
	0xf5, 0x8c, 0x97, 0xfa, 0x53, 0xd0, 0x2c, 0xfd, 0x15, 0x5c, 0x7a, 0x7b, 0x5a, 0x7b, 0x68, 0xbd,
	0x5f, 0xab, 0xcd, 0x8a, 0x8e, 0xf1, 0x42, 0x07, 0xaa, 0x3a, 0xc6, 0x8d, 0x2e, 0x00, 0x8f, 0x8d,
	0x6e, 0xca, 0x64, 0x9a, 0x30, 0x3f, 0x53, 0x13, 0x5b, 0x4e, 0xfd, 0xfe, 0xdd, 0xa7, 0xfe, 0x58,
	0xfb, 0x8c, 0x2a, 0x36, 0xb7, 0x07, 0xe0, 0x12, 0x1c, 0x26, 0x74, 0x49, 0x79, 0x46, 0x27, 0x72,
	0x4e, 0x12, 0xea, 0x1d, 0x74, 0xdd, 0xde, 0xde, 0x10, 0xa9, 0xdc, 0xef, 0xd7, 0x9d, 0xd3, 0x3b,
	0xb4, 0x7b, 0x44, 0x83, 0xf1, 0x41, 0x61, 0x72, 0xa9, 0x3c, 0x86, 0x6f, 0xd7, 0x3f, 0xa1, 0xf3,
	0x65, 0x03, 0x9d, 0xf5, 0x06, 0xba, 0x57, 0x1b, 0xe8, 0xfe, 0xd8, 0x40, 0xf7, 0xd3, 0x16, 0x3a,
	0x57, 0x5b, 0xe8, 0x7c, 0xdb, 0x42, 0xe7, 0x5d, 0xbf, 0xe2, 0x6b, 0xaf, 0x9f, 0xbe, 0x98, 0xcd,
	0x58, 0xc0, 0x48, 0x84, 0xe7, 0x99, 0x8f, 0x73, 0x73, 0x59, 0x69, 0x84, 0x5f, 0xd7, 0xd5, 0x3d,
	0xff, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x2d, 0x7e, 0xb3, 0x48, 0xca, 0x04, 0x00, 0x00,
}

func (m *Params) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Params) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Params) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.RevenueShare.Size()
		i -= size
		if _, err := m.RevenueShare.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintParams(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x62
	n1, err1 := github_com_gogo_protobuf_types.StdDurationMarshalTo(m.LeaseDistributionDuration, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdDuration(m.LeaseDistributionDuration):])
	if err1 != nil {
		return 0, err1
	}
	i -= n1
	i = encodeVarintParams(dAtA, i, uint64(n1))
	i--
	dAtA[i] = 0x5a
	if m.LeaseMinHours != 0 {
		i = encodeVarintParams(dAtA, i, uint64(m.LeaseMinHours))
		i--
		dAtA[i] = 0x50
	}
	if m.LeaseMaxHours != 0 {
		i = encodeVarintParams(dAtA, i, uint64(m.LeaseMaxHours))
		i--
		dAtA[i] = 0x48
	}
	if m.LeaseMinGigabytes != 0 {
		i = encodeVarintParams(dAtA, i, uint64(m.LeaseMinGigabytes))
		i--
		dAtA[i] = 0x40
	}
	if m.LeaseMaxGigabytes != 0 {
		i = encodeVarintParams(dAtA, i, uint64(m.LeaseMaxGigabytes))
		i--
		dAtA[i] = 0x38
	}
	if len(m.HourlyMinPrices) > 0 {
		for iNdEx := len(m.HourlyMinPrices) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.HourlyMinPrices[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintParams(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x32
		}
	}
	if len(m.HourlyMaxPrices) > 0 {
		for iNdEx := len(m.HourlyMaxPrices) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.HourlyMaxPrices[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintParams(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	if len(m.GigabyteMinPrices) > 0 {
		for iNdEx := len(m.GigabyteMinPrices) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.GigabyteMinPrices[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintParams(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.GigabyteMaxPrices) > 0 {
		for iNdEx := len(m.GigabyteMaxPrices) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.GigabyteMaxPrices[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintParams(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	n2, err2 := github_com_gogo_protobuf_types.StdDurationMarshalTo(m.ExpiryDuration, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdDuration(m.ExpiryDuration):])
	if err2 != nil {
		return 0, err2
	}
	i -= n2
	i = encodeVarintParams(dAtA, i, uint64(n2))
	i--
	dAtA[i] = 0x12
	{
		size, err := m.Deposit.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintParams(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func encodeVarintParams(dAtA []byte, offset int, v uint64) int {
	offset -= sovParams(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Params) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Deposit.Size()
	n += 1 + l + sovParams(uint64(l))
	l = github_com_gogo_protobuf_types.SizeOfStdDuration(m.ExpiryDuration)
	n += 1 + l + sovParams(uint64(l))
	if len(m.GigabyteMaxPrices) > 0 {
		for _, e := range m.GigabyteMaxPrices {
			l = e.Size()
			n += 1 + l + sovParams(uint64(l))
		}
	}
	if len(m.GigabyteMinPrices) > 0 {
		for _, e := range m.GigabyteMinPrices {
			l = e.Size()
			n += 1 + l + sovParams(uint64(l))
		}
	}
	if len(m.HourlyMaxPrices) > 0 {
		for _, e := range m.HourlyMaxPrices {
			l = e.Size()
			n += 1 + l + sovParams(uint64(l))
		}
	}
	if len(m.HourlyMinPrices) > 0 {
		for _, e := range m.HourlyMinPrices {
			l = e.Size()
			n += 1 + l + sovParams(uint64(l))
		}
	}
	if m.LeaseMaxGigabytes != 0 {
		n += 1 + sovParams(uint64(m.LeaseMaxGigabytes))
	}
	if m.LeaseMinGigabytes != 0 {
		n += 1 + sovParams(uint64(m.LeaseMinGigabytes))
	}
	if m.LeaseMaxHours != 0 {
		n += 1 + sovParams(uint64(m.LeaseMaxHours))
	}
	if m.LeaseMinHours != 0 {
		n += 1 + sovParams(uint64(m.LeaseMinHours))
	}
	l = github_com_gogo_protobuf_types.SizeOfStdDuration(m.LeaseDistributionDuration)
	n += 1 + l + sovParams(uint64(l))
	l = m.RevenueShare.Size()
	n += 1 + l + sovParams(uint64(l))
	return n
}

func sovParams(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozParams(x uint64) (n int) {
	return sovParams(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Params) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowParams
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Params: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Params: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Deposit", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Deposit.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpiryDuration", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdDurationUnmarshal(&m.ExpiryDuration, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GigabyteMaxPrices", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GigabyteMaxPrices = append(m.GigabyteMaxPrices, types.Coin{})
			if err := m.GigabyteMaxPrices[len(m.GigabyteMaxPrices)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GigabyteMinPrices", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GigabyteMinPrices = append(m.GigabyteMinPrices, types.Coin{})
			if err := m.GigabyteMinPrices[len(m.GigabyteMinPrices)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HourlyMaxPrices", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HourlyMaxPrices = append(m.HourlyMaxPrices, types.Coin{})
			if err := m.HourlyMaxPrices[len(m.HourlyMaxPrices)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HourlyMinPrices", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HourlyMinPrices = append(m.HourlyMinPrices, types.Coin{})
			if err := m.HourlyMinPrices[len(m.HourlyMinPrices)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LeaseMaxGigabytes", wireType)
			}
			m.LeaseMaxGigabytes = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LeaseMaxGigabytes |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LeaseMinGigabytes", wireType)
			}
			m.LeaseMinGigabytes = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LeaseMinGigabytes |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LeaseMaxHours", wireType)
			}
			m.LeaseMaxHours = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LeaseMaxHours |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LeaseMinHours", wireType)
			}
			m.LeaseMinHours = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LeaseMinHours |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LeaseDistributionDuration", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdDurationUnmarshal(&m.LeaseDistributionDuration, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RevenueShare", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.RevenueShare.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipParams(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthParams
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipParams(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowParams
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowParams
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowParams
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthParams
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupParams
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthParams
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthParams        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowParams          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupParams = fmt.Errorf("proto: unexpected end of group")
)
